# yaml-language-server: $schema=https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json
# All icons

# git -   
# folder -  
# check -     
# pause -    
# play -   
# stop -    

# plus -     
# minus -     
# times -     

# down -                    
# up -              
# left -            
# right -           


# exclamation -   
# question -   
# hourglass -  

$schema: https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json
blocks:

# First blank line
- alignment: left
  newline: true
  segments:
  - style: diamond
    template: ""
    type: text
  type: prompt

# Second line
- alignment: left
  newline: true
  segments:

  # FOLDER PATH
  - background_templates:
    - "{{ if not (empty .Env.OVERRIDE_FOLDER_BADGE_BG) }}{{ .Env.OVERRIDE_FOLDER_BADGE_BG }}{{ else }}p:c-badge-folder{{ end }}"
    foreground_templates:
    - "{{ if not (empty .Env.OVERRIDE_FOLDER_BADGE_FG) }}{{ .Env.OVERRIDE_FOLDER_BADGE_FG }}{{ else }}p:c-badge-text{{ end }}"
    leading_diamond: ''
    properties:
      style: folder
    style: diamond
    template: 󰉋 {{ .Path }}
    trailing_diamond: ' '
    type: path

  # # GIT STATUS
  # - background: p:c-git-normal
  #   background_templates:
  #   - "{{ if gt .Ahead 0 }}p:c-git-ahead{{ end }}"
  #   - "{{ if gt .Behind 0 }}p:c-git-behind{{ end }}"
  #   - "{{ if and (gt .Ahead 0) (gt .Behind 0) }}p:c-git-ahead-behind{{ end }}"
  #   - "{{ if and (not .Working.Changed) (.Staging.Changed) }}p:c-git-staging{{ end }}"
  #   - "{{ if and (.Working.Changed) (.Staging.Changed) }}p:c-git-staging-working{{ end }}"
  #   - "{{ if .UpstreamGone }}p:c-git-upstream-gone{{ end }}"
  #   - "{{ if and (.Working.Changed) (not .Staging.Changed) }}p:c-git-working{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   properties:
  #     branch_ahead_icon: ' '
  #     branch_behind_icon: ' '
  #     branch_gone_icon: ' '
  #     branch_icon: ' '
  #     branch_identical_icon:  ' '
  #     fetch_stash_count: true
  #     fetch_status: true
  #   style: diamond
  #   template: "{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }} |  {{ .Working.String }}{{ end }}{{ if and (.Staging.Changed) (.Working.Changed) }}{{ end }}{{ if .Staging.Changed }} |  {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }} |  {{ .StashCount }}{{ end }}"
  #   trailing_diamond: ' '
  #   type: git

  # GIT STATUS
  - background: p:c-git-normal
    background_templates:
    - "{{ if gt .Ahead 0 }}p:c-git-ahead{{ end }}"
    - "{{ if gt .Behind 0 }}p:c-git-behind{{ end }}"
    - "{{ if and (gt .Ahead 0) (gt .Behind 0) }}p:c-git-ahead-behind{{ end }}"
    - "{{ if .UpstreamGone }}p:c-git-upstream-gone{{ end }}"
    - "{{ if and (not .Working.Changed) (.Staging.Changed) }}p:c-git-staging{{ end }}"
    - "{{ if and (.Working.Changed) (.Staging.Changed) }}p:c-git-staging-working{{ end }}"
    - "{{ if and (.Working.Changed) (not .Staging.Changed) }}p:c-git-working{{ end }}"
    foreground: p:c-badge-text
    leading_diamond: ''
    properties:
      branch_ahead_icon: ' '
      branch_behind_icon: ' '
      branch_gone_icon: ' '
      branch_icon: ' '
      branch_identical_icon:  ' '
      fetch_stash_count: true
      fetch_status: true
    style: diamond
    # template: "{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}---{{ if .Working.Changed }} | {{if gt .Working.Modified 0}} MOD {{.Working.Modified}}{{end}}{{ end }}-{{ if .Working.Changed }} | {{if gt .Working.Deleted 0}} DEL {{.Working.Deleted}}{{end}}{{ end }}-{{ if and (.Staging.Changed) (.Working.Changed) }}{{ end }}{{ if .Staging.Changed }} |  {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }} |  {{ .StashCount }}{{ end }}"
    template: "{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}|  {{if gt .Working.Added 0}}  {{.Working.Added}}{{end}}{{if gt .Working.Modified 0}} 󰸥 {{.Working.Modified}}{{end}}{{if gt .Working.Deleted 0}}  {{.Working.Deleted}}{{end}}{{if gt .Working.Untracked 0}}  {{.Working.Untracked}}{{end}}{{ end }}{{ if and (.Staging.Changed) (.Working.Changed) }} {{ end }}{{ if .Staging.Changed }}|  {{if gt .Staging.Added 0}}  {{.Staging.Added}}{{end}}{{if gt .Staging.Modified 0}} 󰸥 {{.Staging.Modified}}{{end}}{{if gt .Staging.Deleted 0}}  {{.Staging.Deleted}}{{end}}{{ end }}"
    trailing_diamond: ' '
    type: git

  type: prompt


# RIGHT SEGMENT
- alignment: right
  segments:

  # EXECUTION TIME
  - background_templates:
    # change the background according to the execution time
    - "{{ if lt .Ms 6000 }}p:c-exec-fast{{ end }}"
    - "{{ if lt .Ms 360000 }}p:c-exec-normal{{ end }}"
    - "{{ if lt .Ms 1080000 }}p:c-exec-slow{{ end }}"
    - "{{ if ge .Ms 1080000 }}p:c-exec-slower{{ end }}"
    foreground: p:c-badge-text
    leading_diamond: ''
    properties:
      style: austin
      threshold: 1.0
    style: diamond
    template: "󱎫 {{ .FormattedMs }}"
    trailing_diamond: ' ' 
    type: executiontime

  # TIME
  - background_templates:
    # change the color according to the time 
    - "{{ if regexMatch \"(^(0[6-9])|(1[0-1])):\" (.CurrentDate | date .Format) }}p:c-date-time-morning{{ end }}"
    - "{{ if regexMatch (\"(^1[2-4]):\") (.CurrentDate | date .Format) }}p:c-date-time-noon{{ end }}"
    - "{{ if regexMatch (\"(^1[5-7]):\") (.CurrentDate | date .Format) }}p:c-date-time-afternoon{{ end }}"
    - "{{ if regexMatch \"(^(1[8-9])|(2[0-3])):\" (.CurrentDate | date .Format) }}p:c-date-time-evening{{ end }}"
    - "{{ if regexMatch \"^(0[0-5]):\" (.CurrentDate | date .Format) }}p:c-date-time-night{{ end }}"
    foreground: p:c-badge-text
    leading_diamond: ''
    properties:
      time_format: 15:04 PM
    style: diamond
    template: "󱑁 {{ .CurrentDate | date .Format }}"
    trailing_diamond: '' 
    type: time

  # BATTERY
  - background_templates:
    - "{{ if .Error }}p:c-battery-state-error{{ end }}"
    - "{{ if le .Percentage 15 }}p:c-battery-15-less{{ end }}"
    - "{{ if and (ge .Percentage 16) (le .Percentage 30) }}p:c-battery-30-less{{ end }}"
    - "{{ if and (ge .Percentage 31) (le .Percentage 45) }}p:c-battery-45-less{{ end }}"
    - "{{ if and (ge .Percentage 46) (le .Percentage 55) }}p:c-battery-55-less{{ end }}"
    - "{{ if and (ge .Percentage 56) (le .Percentage 70) }}p:c-battery-70-less{{ end }}"
    - "{{ if and (ge .Percentage 71) (le .Percentage 90) }}p:c-battery-90-less{{ end }}"
    - "{{ if and (ge .Percentage 91) (le .Percentage 100) }}p:c-battery-100-less{{ end }}"
    foreground: p:c-badge-text
    leading_diamond: ''
    style: diamond
    template: "{{ if eq \"True\" (title (default \"False\" .Env.DISABLE_SEGMENT_BATTERY)) }}{{ else }}{{ if not .Error }}{{ if eq \"Charging\" .State.String }}\ue315 {{ else if eq \"Discharging\" .State.String }}\uf062 {{ else if eq \"Full\" .State.String }}~ {{ else }}? {{ end }}{{ if le .Percentage 15 }}\uf579{{ else if and (ge .Percentage 16) (le .Percentage 30) }}\uf57a{{ else if and (ge .Percentage 31) (le .Percentage 45) }}\uf57c{{ else if and (ge .Percentage 46) (le .Percentage 55)}}\uf57d{{ else if and (ge .Percentage 56) (le .Percentage 70) }}\uf57e{{ else if and (ge .Percentage 71) (le .Percentage 80) }}\uf580{{ else if and (ge .Percentage 81) (le .Percentage 95) }}\uf581{{ else }}\uf578{{ end }} {{ .Percentage }}%{{ else }}!{{ end }}{{ end }}"
    trailing_diamond: ' '
    type: battery

  type: prompt

# NEXT LINE
- alignment: left
  newline: true
  segments:
  # - style: diamond
  #   template: "{{ if false }}{{ end }}"
  #   type: session
  # - background_templates:
  #   - "{{ if and (.Segments.Session.SSHSession) (not .Root) }}p:c-shell-state-ssh-active{{ end }}"
  #   - "{{ if and (not .Segments.Session.SSHSession) (.Root) }}p:c-shell-state-root-active{{ end }}"
  #   - "{{ if and (.Segments.Session.SSHSession) (.Root) }}p:c-shell-state-root-ssh-active{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if or (.Segments.Session.SSHSession) (.Root) }}{{ if .Segments.Session.SSHSession }}\ue7a2 SSH{{ end }}{{ if and (.Segments.Session.SSHSession) (.Root) }} \ue621 {{ end }}{{ if .Root }}# Root{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: text

  # ENVIRONMENT
  # - background_templates:
  #   - "{{ if empty .Full }}p:c-project-generic-error{{ else }}p:c-project-crystal{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_CRYSTAL)) }}\ue62f {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: crystal
  # - background_templates:
  #   - "{{ if empty .Full }}p:c-project-generic-error{{ else }}p:c-project-flutter{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_FLUTTER)) }} | {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: dart
  # - background_templates: 
  #   - "{{ if .Error }}p:c-project-generic-error{{ else }}p:c-project-lua{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_LUA)) }}\ue620 {{ if or (.Error) (empty .Full) }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: lua
  # - background_templates:
  #   - "{{ if empty .Full }}p:c-project-generic-error{{ else }}p:c-project-node{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_NODE)) }}\ue718 {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: node
  # - background_templates:
  #   - "{{ if empty .Full }}p:c-project-generic-error{{ else }}p:c-project-rust{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   style: diamond
  #   template: "{{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_RUST)) }}\ue7a8 {{ if .Error }}{{ .Error }}{{ else }}{{ .Full }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: rust
  # - background_templates:
  #   - "{{ if empty .Full }}p:c-project-generic-error{{ else }}p:c-project-python{{ end }}"
  #   foreground: p:c-badge-text
  #   leading_diamond: ''
  #   properties:
  #     display_mode: context
  #   style: diamond
  #   template: "{{ if or (eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON))) (eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON_VENV))) }}\ue235 {{ if eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON)) }}{{ .Full }}{{ end }}{{ if and (.Venv) (eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON))) (eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON_VENV))) }} \ue621 {{ end }}{{ if and (.Venv) (eq \"False\" (title (default \"False\" .Env.DISABLE_SEGMENT_PROJECT_PYTHON_VENV))) }}{{ if .Env.SEGMENT_PROJECT_PYTHON_ACTIVE_VENV_STR }}{{ .Env.SEGMENT_PROJECT_PYTHON_ACTIVE_VENV_STR }}{{ else }}{{ .Venv }}{{ end }}{{ end }}{{ end }}"
  #   trailing_diamond: ' ' 
  #   type: python

    
  # last prompt 
  - foreground_templates:
    - "{{ if eq \"False\" (title (default \"False\" .Env.ENABLE_ARROW_DIVIDER_COLOR_EXECUTION_RETURN)) }}p:c-badge-white{{ else }}{{ if eq .Code 0 }}p:c-badge-return-success{{ else if or (eq .Code 1) (eq .Code 130) }}p:c-badge-return-fail-term{{ else }}p:c-badge-return-custom{{ end }}{{ end }}"
    style: plain
    template: " "
    type: text
  type: prompt


console_title_template: "{{ if .Segments.Session.SSHSession }}SSH'd{{ if or .Root }} & {{ end }}{{ end }}{{ if .Root }}# (as {{ .UserName }}) | {{ end }}{{ if .WSL }}WSL | {{ end }}{{ .Folder }} ({{ .Shell }})"
final_space: true
palette:
  c-badge-folder: "#FFD770"
  c-badge-return-custom: "#E7B9FF"
  c-badge-return-fail-term: "#FF8A80"
  c-badge-return-success: "#B2FF59"
  c-badge-text: "#212121"
  c-badge-white: "#FAFAFA"
  c-battery-100-less: "#CCFF90"
  c-battery-15-less: "#FF8A80"
  c-battery-30-less: "#FFD180"
  c-battery-45-less: "#FFE57F"
  c-battery-55-less: "#FFFF8D"
  c-battery-70-less: "#F4FF81"
  c-battery-90-less: "#B9F6CA"
  c-battery-state-error: "#FF867F"
  c-date-time-afternoon: "#FFC400"
  c-date-time-evening: "#C0CFFF"
  c-date-time-morning: "#FFFF8D"
  c-date-time-night: "#83B9FF"
  c-date-time-noon: "#FFF64F"
  c-exec-fast: "#C6FF00"
  c-exec-normal: "#FFFF00"
  c-exec-slow: "#FFD180"
  c-exec-slower: "#FF867F"
  c-git-ahead: "#6EFFFF"
  c-git-ahead-behind: "#C0CFFF"
  c-git-behind: "#FFA06D"
  c-git-normal: "#66FFA6"
  c-git-staging: "#FFD740"
  c-git-staging-working: "#FFB2FF"
  c-git-upstream-gone: "#FF867F"
  c-git-working: "#84FFFF"
  c-project-crystal: "#FFFFFF"
  c-project-flutter: "#6DC2FF"
  c-project-generic-error: "#FF867F"
  c-project-lua: "#BBC2FF"
  c-project-node: "#9CFF57"
  c-project-python: "#FFE873"
  c-project-rust: "#FFAB40"
  c-secondary-ellipsis: "#FFFF8D"
  c-shell-state-root-active: "#9FFFE0"
  c-shell-state-root-ssh-active: "#FFB2FF"
  c-shell-state-ssh-active: "#BAFFFF"
  c-wakatime-overtime: "#FF8A80"
  c-wakatime-quota: "#FFD0B0"
  c-wakatime-undertime: "#A7FFEB"
  c-wakatime-warm-up: "#FFFFB3"
  c-wakatime-working: "#FFD180"
  c-terminal-error: "#FFAB40"
  c-terminal-right: "#CDCFFF"
# secondary_prompt:
#   background: transparent
#   foreground: p:c-secondary-ellipsis
#   template:  ... 
# transient_prompt:
#   template: |-
    
#     {{ if eq "False" (title (default "False" .Env.DISABLE_SEGMENT_TRANSIENT)) }}<{{ if eq .Code 0 }}p:c-badge-return-success{{ else if or (eq .Code 1) (eq .Code 130) }}p:c-badge-return-fail-term{{ else }}p:c-badge-return-custom{{ end }}>''</><p:c-badge-text,{{ if eq .Code 0 }}p:c-badge-return-success{{ else if or (eq .Code 1) (eq .Code 130) }}p:c-badge-return-fail-term{{ else }}p:c-badge-return-custom{{ end }}>DONE {{ if .Segments.Executiontime.Ms }}{{ if eq "False" (title (default "False" .Env.DISABLE_SEGMENT_TRANSIENT_EXEC_TIME)) }}\ufa1e {{ .Segments.Executiontime.FormattedMs }} \ue621 {{ end }}{{ end }}<b>{{ if eq .Code 0 }}OK{{ else if eq .Code 1 }}FAIL{{ else if eq .Code 130 }}TERM{{ else }}Code{{ end }} ({{ .Code }})</b></><{{ if eq .Code 0 }}p:c-badge-return-success{{ else if or (eq .Code 1) (eq .Code 130) }}p:c-badge-return-fail-term{{ else }}p:c-badge-return-custom{{ end }}>' '</> {{ end }}❯ 
version: 2.0
